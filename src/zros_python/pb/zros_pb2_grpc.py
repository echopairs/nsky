# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import zros_pb2 as zros__pb2


class ServiceRPCStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.InvokeService = channel.unary_unary(
        '/zros_rpc.ServiceRPC/InvokeService',
        request_serializer=zros__pb2.ServiceRequest.SerializeToString,
        response_deserializer=zros__pb2.ServiceResponse.FromString,
        )


class ServiceRPCServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def InvokeService(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ServiceRPCServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'InvokeService': grpc.unary_unary_rpc_method_handler(
          servicer.InvokeService,
          request_deserializer=zros__pb2.ServiceRequest.FromString,
          response_serializer=zros__pb2.ServiceResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'zros_rpc.ServiceRPC', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class ServiceDiscoveryRPCStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RegisterPublisher = channel.unary_unary(
        '/zros_rpc.ServiceDiscoveryRPC/RegisterPublisher',
        request_serializer=zros__pb2.PublisherInfo.SerializeToString,
        response_deserializer=zros__pb2.Status.FromString,
        )
    self.UnregisterPublisher = channel.unary_unary(
        '/zros_rpc.ServiceDiscoveryRPC/UnregisterPublisher',
        request_serializer=zros__pb2.PublisherInfo.SerializeToString,
        response_deserializer=zros__pb2.Status.FromString,
        )
    self.RegisterServiceServer = channel.unary_unary(
        '/zros_rpc.ServiceDiscoveryRPC/RegisterServiceServer',
        request_serializer=zros__pb2.ServiceServerInfo.SerializeToString,
        response_deserializer=zros__pb2.Status.FromString,
        )
    self.UnregisterServiceServer = channel.unary_unary(
        '/zros_rpc.ServiceDiscoveryRPC/UnregisterServiceServer',
        request_serializer=zros__pb2.ServiceServerInfo.SerializeToString,
        response_deserializer=zros__pb2.Status.FromString,
        )
    self.Ping = channel.unary_unary(
        '/zros_rpc.ServiceDiscoveryRPC/Ping',
        request_serializer=zros__pb2.PingRequest.SerializeToString,
        response_deserializer=zros__pb2.Status.FromString,
        )


class ServiceDiscoveryRPCServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RegisterPublisher(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UnregisterPublisher(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RegisterServiceServer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UnregisterServiceServer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Ping(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ServiceDiscoveryRPCServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RegisterPublisher': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterPublisher,
          request_deserializer=zros__pb2.PublisherInfo.FromString,
          response_serializer=zros__pb2.Status.SerializeToString,
      ),
      'UnregisterPublisher': grpc.unary_unary_rpc_method_handler(
          servicer.UnregisterPublisher,
          request_deserializer=zros__pb2.PublisherInfo.FromString,
          response_serializer=zros__pb2.Status.SerializeToString,
      ),
      'RegisterServiceServer': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterServiceServer,
          request_deserializer=zros__pb2.ServiceServerInfo.FromString,
          response_serializer=zros__pb2.Status.SerializeToString,
      ),
      'UnregisterServiceServer': grpc.unary_unary_rpc_method_handler(
          servicer.UnregisterServiceServer,
          request_deserializer=zros__pb2.ServiceServerInfo.FromString,
          response_serializer=zros__pb2.Status.SerializeToString,
      ),
      'Ping': grpc.unary_unary_rpc_method_handler(
          servicer.Ping,
          request_deserializer=zros__pb2.PingRequest.FromString,
          response_serializer=zros__pb2.Status.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'zros_rpc.ServiceDiscoveryRPC', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class MasterRPCStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RegisterSubscriber = channel.unary_unary(
        '/zros_rpc.MasterRPC/RegisterSubscriber',
        request_serializer=zros__pb2.SubscriberInfo.SerializeToString,
        response_deserializer=zros__pb2.Status.FromString,
        )
    self.UnregisterSubscriber = channel.unary_unary(
        '/zros_rpc.MasterRPC/UnregisterSubscriber',
        request_serializer=zros__pb2.SubscriberInfo.SerializeToString,
        response_deserializer=zros__pb2.Status.FromString,
        )
    self.RegisterPublisher = channel.unary_unary(
        '/zros_rpc.MasterRPC/RegisterPublisher',
        request_serializer=zros__pb2.PublisherInfo.SerializeToString,
        response_deserializer=zros__pb2.Status.FromString,
        )
    self.UnregisterPublisher = channel.unary_unary(
        '/zros_rpc.MasterRPC/UnregisterPublisher',
        request_serializer=zros__pb2.PublisherInfo.SerializeToString,
        response_deserializer=zros__pb2.Status.FromString,
        )
    self.RegisterServiceServer = channel.unary_unary(
        '/zros_rpc.MasterRPC/RegisterServiceServer',
        request_serializer=zros__pb2.ServiceServerInfo.SerializeToString,
        response_deserializer=zros__pb2.Status.FromString,
        )
    self.UnregisterServiceServer = channel.unary_unary(
        '/zros_rpc.MasterRPC/UnregisterServiceServer',
        request_serializer=zros__pb2.ServiceServerInfo.SerializeToString,
        response_deserializer=zros__pb2.Status.FromString,
        )
    self.RegisterServiceClient = channel.unary_unary(
        '/zros_rpc.MasterRPC/RegisterServiceClient',
        request_serializer=zros__pb2.ServiceClientInfo.SerializeToString,
        response_deserializer=zros__pb2.Status.FromString,
        )
    self.UnregisterServiceClient = channel.unary_unary(
        '/zros_rpc.MasterRPC/UnregisterServiceClient',
        request_serializer=zros__pb2.ServiceClientInfo.SerializeToString,
        response_deserializer=zros__pb2.Status.FromString,
        )
    self.Ping = channel.unary_unary(
        '/zros_rpc.MasterRPC/Ping',
        request_serializer=zros__pb2.PingRequest.SerializeToString,
        response_deserializer=zros__pb2.Status.FromString,
        )


class MasterRPCServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RegisterSubscriber(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UnregisterSubscriber(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RegisterPublisher(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UnregisterPublisher(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RegisterServiceServer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UnregisterServiceServer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RegisterServiceClient(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UnregisterServiceClient(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Ping(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MasterRPCServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RegisterSubscriber': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterSubscriber,
          request_deserializer=zros__pb2.SubscriberInfo.FromString,
          response_serializer=zros__pb2.Status.SerializeToString,
      ),
      'UnregisterSubscriber': grpc.unary_unary_rpc_method_handler(
          servicer.UnregisterSubscriber,
          request_deserializer=zros__pb2.SubscriberInfo.FromString,
          response_serializer=zros__pb2.Status.SerializeToString,
      ),
      'RegisterPublisher': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterPublisher,
          request_deserializer=zros__pb2.PublisherInfo.FromString,
          response_serializer=zros__pb2.Status.SerializeToString,
      ),
      'UnregisterPublisher': grpc.unary_unary_rpc_method_handler(
          servicer.UnregisterPublisher,
          request_deserializer=zros__pb2.PublisherInfo.FromString,
          response_serializer=zros__pb2.Status.SerializeToString,
      ),
      'RegisterServiceServer': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterServiceServer,
          request_deserializer=zros__pb2.ServiceServerInfo.FromString,
          response_serializer=zros__pb2.Status.SerializeToString,
      ),
      'UnregisterServiceServer': grpc.unary_unary_rpc_method_handler(
          servicer.UnregisterServiceServer,
          request_deserializer=zros__pb2.ServiceServerInfo.FromString,
          response_serializer=zros__pb2.Status.SerializeToString,
      ),
      'RegisterServiceClient': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterServiceClient,
          request_deserializer=zros__pb2.ServiceClientInfo.FromString,
          response_serializer=zros__pb2.Status.SerializeToString,
      ),
      'UnregisterServiceClient': grpc.unary_unary_rpc_method_handler(
          servicer.UnregisterServiceClient,
          request_deserializer=zros__pb2.ServiceClientInfo.FromString,
          response_serializer=zros__pb2.Status.SerializeToString,
      ),
      'Ping': grpc.unary_unary_rpc_method_handler(
          servicer.Ping,
          request_deserializer=zros__pb2.PingRequest.FromString,
          response_serializer=zros__pb2.Status.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'zros_rpc.MasterRPC', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
